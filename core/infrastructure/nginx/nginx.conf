server {
    listen 80;
    server_name localhost;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # Enable larger request buffers for OAuth responses
    client_max_body_size 10M;
    large_client_header_buffers 4 16k;
    
    # Frontend
    location / {
        root /www;
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Auth API
    location /api/ {
        proxy_pass http://auth:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90s;
        proxy_buffering off;
    }

    # OAuth callback - Maximum compatibility configuration
    location /auth/callback {
        # Use exact match for the callback URL to avoid any redirection issues
        proxy_pass http://auth:8000/api/oauth/42/callback/;
        
        # Pass all headers to backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;
        
        # Prevent nginx from modifying the Location header in redirects
        proxy_redirect off;
        
        # Don't buffer responses to ensure redirects are passed through immediately
        proxy_buffering off;
        
        # Pass all request headers to the backend
        proxy_pass_request_headers on;
        
        # Increase timeouts for OAuth operations
        proxy_read_timeout 180s;
        proxy_connect_timeout 180s;
        proxy_send_timeout 180s;
        
        # Prevent encoding issues
        proxy_set_header Accept-Encoding "";
        
        # Disable any caching
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Home page - Ensure it works with query parameters
    location = /home {
        root /www;
        try_files /index.html =404;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Dashboard page - For redirects after login
    location = /dashboard {
        root /www;
        try_files /index.html =404;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # OAuth login
    location /api/oauth/ {
        proxy_pass http://auth:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 120s;
        proxy_buffering off;
    }
} 