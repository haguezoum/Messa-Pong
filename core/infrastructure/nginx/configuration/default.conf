server {
	# Listen on HTTP port on both IPv4 and IPv6
	listen			80;
	listen			[::]:80;

	# Listen on HTTPS port and use SSL on both IPv4 and IPv6
	listen			443 ssl http2;
	listen			[::]:443 ssl http2;

	server_name		default;

	# Specify the SSL/TLS protocols allowed for HTTPS connections.
	ssl_protocols			TLSv1.2 TLSv1.3;
	
	# Specify the SSL key and certificate for HTTPS
	ssl_certificate			/etc/nginx/ssl/ssl.crt;
	ssl_certificate_key		/etc/nginx/ssl/ssl.key;

	# Add these SSL settings
	ssl_session_timeout 1d;
	ssl_session_tickets off;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	ssl_prefer_server_ciphers off;

	# Redirect HTTP requests to HTTPS
	if ($scheme != "https") {
		return 301 https://$host$request_uri;
	}

	# Security headers to prevent XSS, clickjacking, MIME sniffing, and other attacks
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
	add_header X-Content-Type-Options "nosniff" always;
	add_header X-Frame-Options "SAMEORIGIN" always;
	add_header X-XSS-Protection "1; mode=block" always;

	# Add these security headers
	add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:;" always;
	add_header Referrer-Policy "strict-origin-when-cross-origin" always;
	add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

	# Define the root directory for serving web content.
	root		/www;
	index		index.html;

	# kibana proxy
	location /kibana/ {
		auth_basic "Restricted Access";
		#auth_basic_user_file /etc/nginx/.htpasswd;
		proxy_pass http://kibana:5601;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_buffering off;
		rewrite ^/kibana/(.*) /$1 break;
	}
	location /elasticsearch/ {
		auth_basic "Restricted Access";
		#auth_basic_user_file /etc/nginx/.htpasswd;
		proxy_pass http://elasticsearch:9200;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_buffering off;
		#rewrite ^/kibana/(.*) /$1 break;
	}

	# Proxy API requests to Auth Service
	# location /api/ {
	# 	proxy_pass http://auth:8000;  # Assuming Auth runs on port 8000
	# 	proxy_set_header Host $host;
	# 	proxy_set_header X-Real-IP $remote_addr;
	# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# 	proxy_set_header X-Forwarded-Proto $scheme;
	# }

	# Proxy Game WebSocket connections
	# location /game/ {
	# 	proxy_pass http://game:8001;
	# 	proxy_http_version 1.1;
	# 	proxy_set_header Upgrade $http_upgrade;
	# 	proxy_set_header Connection "upgrade";
	# 	proxy_set_header Host $host;
	# 	proxy_read_timeout 300s;
	# 	proxy_send_timeout 300s;
	# 	proxy_buffering off;
	# }

	# Proxy Chat WebSocket connections
	# location /chat/ {
	# 	proxy_pass http://chat:8002;
	# 	proxy_http_version 1.1;
	# 	proxy_set_header Upgrade $http_upgrade;
	# 	proxy_set_header Connection "upgrade";
	# 	proxy_set_header Host $host;
	# 	proxy_read_timeout 300s;
	# 	proxy_send_timeout 300s;
	# 	proxy_buffering off;
	# }

	# Serve index.html for any location and aggressively prevent caching for it
	location / {
		try_files $uri /public/index.html;
		add_header Cache-Control "no-cache, no-store, must-revalidate";
		add_header Pragma "no-cache";
		add_header Expires 0;
	}
	# serve matched assets and push for caching
	location /src/assets/ {
		try_files $uri $uri/ =404;
		expires 1y;
		add_header Cache-Control "public, no-transform";
		access_log off;
		location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
			expires max;
		}
	}

	# Deny access to hidden files and directories [files starting with a dot] and PHP files for security
	location ~ /\. {
		deny all;
	}
	# Deny access to PHP files for security
	location ~ \.php$ {
		deny all;
	}
	
	# Disable directory listings for increased security
	autoindex off;

	# Compression Settings
	gzip on;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
	gzip_min_length 1000;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_vary on;

	# Access & Error Logs
	access_log /dev/stdout;
	error_log /dev/stderr warn;

	# Keep the location block with limit_req
	# location /api/ {
	# 	limit_req zone=api burst=20 nodelay;
	# 	proxy_pass http://auth:8000;
	# 	proxy_http_version 1.1;
	# 	proxy_set_header Upgrade $http_upgrade;
	# 	proxy_set_header Connection "upgrade";
	# 	proxy_set_header Host $host;
	# 	proxy_read_timeout 300s;
	# 	proxy_send_timeout 300s;
	# 	proxy_buffering off;
	# 	proxy_set_header X-Real-IP $remote_addr;
	# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# 	proxy_set_header X-Forwarded-Proto $scheme;
	# 	proxy_set_header X-Forwarded-Host $host;
	# 	proxy_set_header X-Forwarded-Server $host;
	# 	proxy_set_header X-Forwarded-Port $server_port;
	# }

	# Add to server block
	error_page 404 /404.html;
	error_page 500 502 503 504 /50x.html;
	location = /404.html {
		root /www/public;
		internal;
	}
	location = /50x.html {
		root /www/public;
		internal;
	}

	# Add to server block
	client_max_body_size 10M;
	client_body_buffer_size 128k;
	client_header_timeout 60;
	client_body_timeout 60;
	keepalive_timeout 65;
	send_timeout 60;

	# Keep this line
	expires $expires;
}
