server {
	# Listen on HTTP port on both IPv4 and IPv6
	listen			80;
	listen			[::]:80;

	# Listen on HTTPS port and use SSL on both IPv4 and IPv6
	listen			443 ssl http2;
	listen			[::]:443 ssl http2;

	server_name		default;

	# Specify the SSL/TLS protocols allowed for HTTPS connections.
	ssl_protocols			TLSv1.2 TLSv1.3;
	
	# Specify the SSL key and certificate for HTTPS
	ssl_certificate			/etc/nginx/ssl/ssl.crt;
	ssl_certificate_key		/etc/nginx/ssl/ssl.key;

	# Redirect HTTP requests to HTTPS
	if ($scheme != "https") {
		return 301 https://$host$request_uri;
	}

	# Security headers to prevent XSS, clickjacking, MIME sniffing, and other attacks
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
	add_header X-Content-Type-Options "nosniff" always;
	add_header X-Frame-Options "SAMEORIGIN" always;
	add_header X-XSS-Protection "1; mode=block" always;

	# Define the root directory for serving web content.
	root		/www;
	index		index.html;

	# Serve index.html for any location and aggressively prevent caching for it
	location / {
		try_files $uri /public/index.html;
		add_header Cache-Control "no-cache, no-store, must-revalidate";
		add_header Pragma "no-cache";
		add_header Expires 0;
	}
	# serve matched assets and push for caching
	location /src {
		try_files $uri $uri/ =404;
		expires 30d;
		add_header Cache-Control "public, no-transform";
	}
	# serve Chat server from different container named chat and coded with django framework [websocket]
	# location /chat {
	# 	proxy_pass http://localhost/chat;
	# 	proxy_http_version 1.1;
	# 	proxy_set_header Upgrade $http_upgrade;
	# 	proxy_set_header Connection 'upgrade';
	# 	proxy_set_header Host $host;
	# 	proxy_cache_bypass $http_upgrade;
	# }
	# serve Game server from different container named game and coded with django framework [websocket]
	# location /game {
	# 	proxy_pass http://localhost/game;
	# 	proxy_http_version 1.1;
	# 	proxy_set_header Upgrade $http_upgrade;
	# 	proxy_set_header Connection 'upgrade';
	# 	proxy_set_header Host $host;
	# 	proxy_cache_bypass $http_upgrade;
	# }
	# serve API server from different container named api and coded with django framework [websocket]
	# location /api {
	# 	proxy_pass http://localhost/api;
	# 	proxy_http_version 1.1;
	# 	proxy_set_header Upgrade $http_upgrade;
	# 	proxy_set_header Connection 'upgrade';
	# 	proxy_set_header Host $host;
	# 	proxy_cache_bypass $http_upgrade;
	# } 

	# Deny access to hidden files and directories [files starting with a dot] and PHP files for security
	location ~ /\. {
		deny all;
	}
	# Deny access to PHP files for security
	location ~ \.php$ {
		deny all;
	}
	
	# Disable directory listings for increased security
	autoindex off;

	# Compression Settings
	gzip on;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
	gzip_min_length 1000;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_vary on;

	# Access & Error Logs
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log warn;
}
